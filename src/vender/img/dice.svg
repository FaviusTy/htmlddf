<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="-0.5 -0.5 100.5 140.5" width="100" height="100">
<style type="text/css">
</style>
<script type="text/javascript"><![CDATA[
paramArray = {
  dice: 6,
  prop: 1,
  r: null,
  g: null,
  b: null,
}

ct = {
  4: [255,153,0],
  6: [255,255,255],
  8: [53,161,107],
  10: [0,65,255],
  12: [154,0,121],
  20: [250,245,0]
}

st = {
  4: {
    1: [4,3],
    2: [4,1],
    3: [2,1],
    4: [2,3]
  },
  8: {
    1: [2],
    2: [1],
    3: [4],
    4: [3],
    5: [6],
    6: [5],
    7: [8],
    8: [7]
  }
};

var ns = "http://www.w3.org/2000/svg";

function sin(d){return Math.sin(d/180*3.1415);}
function cos(d){return Math.cos(d/180*3.1415);}
Array.prototype.arrmul = (v)=>{for(key in this){this[key] *= v;}return this;};

window.onload = function(){
  dice = parseInt(paramArray['dice']);
  prop = parseInt(paramArray['prop']);
  if(paramArray["r"] == null || paramArray["g"] == null || paramArray["b"] == null){
    color = ct[dice];
  }else{
    color = [parseInt(paramArray["r"]), parseInt(paramArray["g"]), parseInt(paramArray["b"])];
  }
  propColor = color[0]*0.21+color[1]*0.72+color[2]*0.07 > 172?"black":"white";
  switch(dice){
    case 4:
      faceG   = document.createElementNS(ns, 'g');

      p1 = document.createElementNS(ns, 'path');
      p1.setAttribute("d", "M50,0 L100,86.6 H0 Z");
      p1.setAttribute("stroke", "black");
      p1.setAttribute("stroke-width", "1");
      p1.setAttribute("fill", `rgb(${color})`);
      faceG.appendChild(p1);

      d1 = document.createElementNS(ns, 'text');
      d1.textContent = prop;
      d1.setAttribute("stroke", propColor);
      d1.setAttribute("stroke-width", "2");
      d1.setAttribute("x", 50);
      d1.setAttribute("y", 25);
      faceG.appendChild(d1);
      d2 = document.createElementNS(ns, 'text');
      d2.setAttribute("stroke", propColor);
      d2.setAttribute("stroke-width", "2");
      d2.setAttribute("x", 50);
      d2.setAttribute("y", 25);
      d2.textContent = st[4][prop][0];
      d2.setAttribute("transform", "rotate(120 50,57.74)");
      faceG.appendChild(d2);
      d3 = document.createElementNS(ns, 'text');
      d3.setAttribute("stroke", propColor);
      d3.setAttribute("stroke-width", "2");
      d3.setAttribute("x", 50);
      d3.setAttribute("y", 25);
      d3.textContent = st[4][prop][1];
      d3.setAttribute("transform", "rotate(240 50,57.74)");
      faceG.appendChild(d3);

      document.getElementById("root").appendChild(faceG);
      break;

    case 6:
      round = Math.random() * 70-35;
      
      topG   = document.createElementNS(ns, 'g');
      leftG  = document.createElementNS(ns, 'g');
      rightG = document.createElementNS(ns, 'g');

      p1 = document.createElementNS(ns, 'path');
      p1.setAttribute("d", "M50,0 L100,50 L50,100 L0,50 Z");
      p1.setAttribute("stroke", "black");
      p1.setAttribute("stroke-width", "1");
      p1.setAttribute("fill", `rgb(${color})`);
      topG.setAttribute("transform", `scale(1 0.6666) rotate(${round} 50 50)`);
      topG.appendChild(p1);

      p2 = document.createElementNS(ns, 'path');
      p2.setAttribute("d", `M0,50 H${cos(round)*50-sin(round)*50} V130 H0 Z`);
      p2.setAttribute("stroke", "black");
      p2.setAttribute("stroke-width", "1");
      p2.setAttribute("fill", "rgb("+color.map((v)=>{return v * cos(round+45) - 60 | 0})+")");
      leftG.setAttribute("transform", `translate(${50-cos(round)*50} ${-sin(round)*33.33}) scale(1, 0.6666) skewY(${45+round})`);
      leftG.appendChild(p2);
      
      p3 = document.createElementNS(ns, 'path');
      p3.setAttribute("d", `M0,50 H${cos(round)*50+sin(round)*50} V130 H0 Z`);
      p3.setAttribute("stroke", "black");
      p3.setAttribute("stroke-width", "1");
      p3.setAttribute("fill", "rgb("+color.map((v)=>{return v * sin(round+45) - 20 | 0})+")");
      rightG.setAttribute("transform", `translate(${50+cos(round)*50} ${sin(round)*33.33}) scale(-1, 0.6666) skewY(${45-round})`);
      rightG.appendChild(p3);

      switch(prop){
        case 1:
          addCircle(topG, 50  , 50  , 8, "", color.join("")=="255255255"?"rgb(255,40,0)":propColor);

          //左面4
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);

          //右面5
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0,  90, 5, `translate(${(cos(round) + sin(round)) * 50 / 2    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);

          break;
        case 2:
          addCircle(topG, 50  , 25  , 5, "", propColor);
          addCircle(topG, 50  , 75  , 5, "", propColor);

          //左面6
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0,  90, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0,  90, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);

          //右面4
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);

          break;
        case 3:
          addCircle(topG, 25  , 50  , 5, "", propColor);
          addCircle(topG, 50  , 50  , 5, "", propColor);
          addCircle(topG, 75  , 50  , 5, "", propColor);

          //左面5
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0,  90, 5, `translate(${(cos(round) - sin(round)) * 50 / 2    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);

          //右面6
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 2    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 2    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);

          break;
        case 4:
          addCircle(topG, 25  , 50  , 5, "", propColor);
          addCircle(topG, 50  , 25  , 5, "", propColor);
          addCircle(topG, 75  , 50  , 5, "", propColor);
          addCircle(topG, 50  , 75  , 5, "", propColor);

          //左面1
          addCircle(leftG, 0,  90, 8, `translate(${(cos(round) - sin(round)) * 50 / 2    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, color.join("")=="255255255"?"rgb(255,40,0)":propColor);

          //右面2
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);

          break;
        case 5:
          addCircle(topG, 25  , 50  , 5, "", propColor);
          addCircle(topG, 50  , 25  , 5, "", propColor);
          addCircle(topG, 50  , 50  , 5, "", propColor);
          addCircle(topG, 75  , 50  , 5, "", propColor);
          addCircle(topG, 50  , 75  , 5, "", propColor);

          //左面3
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0,  90, 5, `translate(${(cos(round) - sin(round)) * 50 / 2    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);

          //右面1
          addCircle(rightG, 0,  90, 8, `translate(${(cos(round) + sin(round)) * 50 / 2    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, color.join("")=="255255255"?"rgb(255,40,0)":propColor);

          break;
        case 6:
          addCircle(topG, 25  , 50  , 5, "", propColor);
          addCircle(topG, 37.5, 37.5, 5, "", propColor);
          addCircle(topG, 50  , 25  , 5, "", propColor);
          addCircle(topG, 75  , 50  , 5, "", propColor);
          addCircle(topG, 62.5, 62.5, 5, "", propColor);
          addCircle(topG, 50  , 75  , 5, "", propColor);

          //左面2
          addCircle(leftG, 0,  70, 5, `translate(${(cos(round) - sin(round)) * 50 / 4    } 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);
          addCircle(leftG, 0, 110, 5, `translate(${(cos(round) - sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) - sin(round)) / 2} 1)`, propColor);

          //右面3
          addCircle(rightG, 0,  70, 5, `translate(${(cos(round) + sin(round)) * 50 / 4 * 3} 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0,  90, 5, `translate(${(cos(round) + sin(round)) * 50 / 2    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
          addCircle(rightG, 0, 110, 5, `translate(${(cos(round) + sin(round)) * 50 / 4    } 0) scale(${(cos(round) + sin(round)) / 2} 1)`, propColor);
      }

      document.getElementById("root").appendChild(topG);
      document.getElementById("root").appendChild(leftG);
      document.getElementById("root").appendChild(rightG);
      break;
    case 8:

      faceG   = document.createElementNS(ns, 'g');
      backG   = document.createElementNS(ns, 'g');

      p1 = document.createElementNS(ns, 'path');
      p1.setAttribute("d", "M50,0 L100,86.6 H0 Z");
      p1.setAttribute("stroke", "black");
      p1.setAttribute("stroke-width", "1");
      p1.setAttribute("fill", `rgb(${color})`);
      faceG.appendChild(p1);
      p1 = document.createElementNS(ns, 'path');
      p1.setAttribute("d", "M50,-86.6 L100,0 H0 Z");
      p1.setAttribute("stroke", "black");
      p1.setAttribute("stroke-width", "1");
      p1.setAttribute("fill", `rgb(${color.map((v)=>{return v - 80})})`);
      backG.setAttribute("transform", `rotate(180 50,43.3) scale(1 0.5)`);
      backG.appendChild(p1);

      d1 = document.createElementNS(ns, 'text');
      d1.textContent = prop;
      d1.setAttribute("stroke", propColor);
      d1.setAttribute("stroke-width", "2");
      d1.setAttribute("x", 50);
      d1.setAttribute("y", 57.74);
      faceG.appendChild(d1);
      d2 = document.createElementNS(ns, 'text');
      d2.setAttribute("stroke", propColor);
      d2.setAttribute("stroke-width", "2");
      d2.setAttribute("x", 50);
      d2.setAttribute("y", -43.3);
      d2.textContent = st[8][prop][0];
      backG.appendChild(d2);

      if(prop==6){
        d1.setAttribute("text-decoration", "underline");
      }
      if(prop==5){
        d2.setAttribute("text-decoration", "underline");
      }

      document.getElementById("root").setAttribute("font-size", "24pt");
      document.getElementById("root").appendChild(backG);
      document.getElementById("root").appendChild(faceG);
      break;

  }
};

function addCircle(parent, cx, cy, r, transform, fillColor){
  c1 = document.createElementNS(ns, 'circle');
  c1.setAttribute("cx", cx);
  c1.setAttribute("transform", transform);
  c1.setAttribute("cy", cy);
  c1.setAttribute("r" , r);
  c1.setAttribute("fill", fillColor);
  parent.appendChild(c1);
}
]]></script>

  <g id="root" font-size="18pt" dominant-baseline="middle" text-anchor="middle" transform="translate(0.5,0.5)">
  </g>

  <script type="text/ecmascript" xlink:href="../js/svg_param.js" /> 
</svg>